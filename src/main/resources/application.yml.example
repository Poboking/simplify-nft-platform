server:
  port: 9090
  
  # redis配置 
  redis:
    # Redis数据库索引（默认为0）
    database: 1
    # Redis服务器地址
    host: 127.0.0.1
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    # password: 
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0
  
  # 屏蔽烦人的FiscoBcosSDK线程池日志
logging:
  level:
    o.f.bcos.sdk.eventsub.EventSubscribeImp: OFF


spring:
  servlet:
    multipart:
      max-file-size: 20MB
      max-request-size: 20MB
      enabled: true
  application:
    name: simplify-nft-platform
  
  # MYSQL
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/simplify_nft?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
    username: simplify_nft
    password: simplify_nft
  
  # RabbitMQ配置
  rabbitmq:
    host: 217.0.0.1
    port: 35672
    virtual-host: /demo
    username: demo
    password: demo

ipfs:
  vps:
    node: /ip4/8.129.91.171/tcp/5001


mq:
  config:
    exchange:
      default: direct
      direct: direct
      fanout: fanout
      topic: topic
    queue:
      mint: nft.queue.mint
      brun: nft.queue.brun
      transfer: nft.queue.transfer
      soldOut: nft.queue.sold.out
      register: nft.queue.register
    routingKey:
      mint: nft.routing.key.mint
      brun: nft.routing.key.brun
      transfer: nft.routing.key.transfer
      soldOut: nft.routing.key.sold.out
      register: nft.routing.key.register




# Graceful-Response配置
graceful-response:
  response-style: 1
  exclude-packages:
    - com.github.xiaoymin.**
    - springfox.**
    - io.swagger.**
    - org.springdoc.**
  # 自定义的成功响应码，不配置则为0
  default-success-code: 200
  # 自定义的成功提示，默认为ok
  default-success-msg: successful
  # 自定义的失败响应码，默认为1
  default-error-code: 500
  # 自定义的失败提示，默认为error
  default-error-msg: error
  # 设置是否将原生异常错误信息detailMessage字段填充到Response的msg中
  # 此设置可以用于捕获异常自定义返回信息，但是会暴露系统内部异常信息
  # 默认为false，即不打开
  origin-exception-using-detail-message: true
  # 是否打印异常日志，默认为false
  print-exception-in-global-advice: true


########### PageHelper设置  ############
pagehelper:
  auto-dialect: true
  reasonable: false
  support-methods-arguments: true
  params: count=countSql


# Redis配置

# MP
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml

# knife4j配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: "default"
      paths-to-match: "/**"
      packages-to-scan: "io.knightx.simplifynftplatform.controller"
  default-flat-param-object: true

knife4j:
  enable: true
  setting:
    language: zh_cn

############## 区块链配置 #############
fisco:
  cert-path: conf
  # 默认的deploy账号配置, 用于测试, 无需更改 
  deploy-private-key: "e79e4a1b2059726897f64630e00ee96c653a85ef2d76e4a3f9b5a6bfec5e8131"
  deploy-address: "0x2fcbdb86f960e72febae7955e99b2cf0887d403f"
  ######## 自定义配置  ###########
  user-contract-address: "0x84ead1f5a23b921caf49320272a6b0c3dcc4bebb"
  nft-contract-address: "0x00a440483f3fc32b1e2fd64fb430b614f73b2f7f"
  press-nodes: "222.187.238.227:33320;222.187.238.227:33321"


# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: satoken
  # token有效期，单位s 默认30天, -1代表永不过期 
  timeout: 2592000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  active-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录) 
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token) 
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志 
  is-log: false
  
  
